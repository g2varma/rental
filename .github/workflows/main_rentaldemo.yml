name: Build and deploy Next.js app to Azure Web App - rentaldemo

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: |
          npm install -g yarn
          yarn install

      - name: Build the Next.js app
        run: yarn build
        
      - name: Check build output (debugging)
        run: |
          ls -l .next
          ls -l public
          ls -l node_modules
          ls -l package.json

      - name: Zip artifact for deployment
        run: zip -r release.zip .next package.json public node_modules .env.production

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: nextjs-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: nextjs-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Print working directory (debugging)
        run: pwd

      - name: FTPS deploy to Azure Web App
        run: |
          # Navigate to the repository root to ensure correct paths
          cd /home/runner/work/rental/rental

          # Verify the existence of the necessary files
          ls -l .next
          ls -l public
          ls -l node_modules
          ls -l package.json

          # Upload the .next folder and other necessary files to /home/site/wwwroot
          lftp -e "mirror -R .next /home/site/wwwroot/.next; mirror -R public /home/site/wwwroot/public; mirror -R package.json /home/site/wwwroot/package.json; mirror -R node_modules /home/site/wwwroot/node_modules; quit" -u $FTP_USERNAME,$FTP_PASSWORD $FTP_SERVER
        env:
          FTP_SERVER: 'ftps://waws-prod-yt1-067.ftp.azurewebsites.windows.net/site/wwwroot'
          FTP_USERNAME: 'rentaldemo\$rentaldemo'
          FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
